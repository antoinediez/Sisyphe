
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/plot_volume_exclusion.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__auto_examples_plot_volume_exclusion.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_plot_volume_exclusion.py:


Volume exclusion
============================================

.. GENERATED FROM PYTHON SOURCE LINES 8-11

This model is introduced in

S. Motsch, D. Peurichard, From short-range repulsion to Hele-Shaw problem in a model of tumor growth, *J. Math. Biology*, Vol. 76, No. 1, 2017.

.. GENERATED FROM PYTHON SOURCE LINES 14-15

First of all, some standard imports. 

.. GENERATED FROM PYTHON SOURCE LINES 15-31

.. code-block:: default


    import os
    import sys
    import time
    import math
    import torch
    import numpy as np 
    from matplotlib import pyplot as plt
    import sisyphe.models as models
    from sisyphe.display import scatter_particles


    use_cuda = torch.cuda.is_available()
    dtype = torch.cuda.FloatTensor if use_cuda else torch.FloatTensor









.. GENERATED FROM PYTHON SOURCE LINES 32-49

Repulsion force
-------------------------------------------

Each particle is a disk with a (fixed) random radius. The particles repel each other when they overlap. The force exerted by a particle located at :math:`x_j` with radius :math:`R_j` on a particle located at :math:`x_i` with radius :math:`R_i` is

.. math::

    F = -\frac{\alpha}{R_i} \nabla_{x_i} U\left(\frac{|x_i - x_j|^2}{(R_i + R_j)^2}\right),

where the potential is

.. math::

    U(s) = -\log(s) + s - 1\,\,\text{for}\,\, s<1 \,\,\text{and}\,\, U(s) = 0\,\, \text{for}\,\, s>1.

Initially, the particles are clustered in a small region with a strong overlapping. 


.. GENERATED FROM PYTHON SOURCE LINES 49-69

.. code-block:: default



    N = 10000
    rmin = .1
    rmax = 1.
    R = (rmax-rmin)*torch.rand(N).type(dtype)+rmin
    L = 100.
    D0 = 20.
    pos = (D0*torch.rand((N,2)).type(dtype)-D0/2)+torch.tensor([L/2,L/2]).type(dtype)

    dt = .1

    simu = models.VolumeExclusion(pos=pos,
                     interaction_radius=R,
                     box_size=L,
                     alpha=2.5,
                     division_rate=0., 
                     death_rate=0.,                    
                     dt=dt)








.. GENERATED FROM PYTHON SOURCE LINES 70-72

Run the simulation over 200 units of time using an adaptive time-step which ensures that the energy :attr:`E` of the system decreases.


.. GENERATED FROM PYTHON SOURCE LINES 72-81

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 13

    frames = [0,1,2,3,4,5,10,30,50,75,100,150,200]

    s = time.time()
    scatter_particles(simu,frames)
    e = time.time()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_001.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=0.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_002.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=1.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_003.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=2.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_004.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=3.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_005.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=4.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_006.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=5.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_007.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=10.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_008.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=30.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_009.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=50.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_010.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=75.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_011.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=100.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_012.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=150.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_013.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.0 ; Death rate=0.0  Time=200.0
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Progress:0%    Progress:1%    Progress:2%    Progress:3%    Progress:4%    Progress:5%    Progress:6%    Progress:7%    Progress:8%    Progress:9%    Progress:10%    Progress:11%    Progress:12%    Progress:13%    Progress:14%    Progress:15%    Progress:16%    Progress:17%    Progress:18%    Progress:19%    Progress:20%    Progress:21%    Progress:22%    Progress:23%    Progress:24%    Progress:25%    Progress:26%    Progress:27%    Progress:28%    Progress:29%    Progress:30%    Progress:31%    Progress:32%    Progress:33%    Progress:34%    Progress:35%    Progress:36%    Progress:37%    Progress:38%    Progress:39%    Progress:40%    Progress:41%    Progress:42%    Progress:43%    Progress:44%    Progress:45%    Progress:46%    Progress:47%    Progress:48%    Progress:49%    Progress:50%    Progress:51%    Progress:52%    Progress:53%    Progress:54%    Progress:55%    Progress:56%    Progress:57%    Progress:58%    Progress:59%    Progress:60%    Progress:61%    Progress:62%    Progress:63%    Progress:64%    Progress:65%    Progress:66%    Progress:67%    Progress:68%    Progress:69%    Progress:70%    Progress:71%    Progress:72%    Progress:73%    Progress:74%    Progress:75%    Progress:76%    Progress:77%    Progress:78%    Progress:79%    Progress:80%    Progress:81%    Progress:82%    Progress:83%    Progress:84%    Progress:85%    Progress:86%    Progress:87%    Progress:88%    Progress:89%    Progress:90%    Progress:91%    Progress:92%    Progress:93%    Progress:94%    Progress:95%    Progress:96%    Progress:97%    Progress:98%    Progress:99%    Progress:100%



.. GENERATED FROM PYTHON SOURCE LINES 82-83

Print the total simulation time and the average time per iteration. 

.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: default


    print('Total time: '+str(e-s)+' seconds')
    print('Average time per iteration: '+str((e-s)/simu.iteration)+' seconds')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Total time: 326.2268440723419 seconds
    Average time per iteration: 0.01703801347847401 seconds




.. GENERATED FROM PYTHON SOURCE LINES 88-89

Note this funny behaviour: the particles are clustered by size! 

.. GENERATED FROM PYTHON SOURCE LINES 91-96

Repulsion force, random births and random deaths
---------------------------------------------------------------------

Same system but this time, particles die at a constant rate and give birth to new particles at the same rate. A new particle is added next to its parent and has the same radius. 


.. GENERATED FROM PYTHON SOURCE LINES 96-116

.. code-block:: default


    N = 10000
    rmin = .1
    rmax = 1.
    R = (rmax-rmin)*torch.rand(N).type(dtype)+rmin
    L = 100.
    D0 = 20.
    pos = (D0*torch.rand((N,2)).type(dtype)-D0/2)+torch.tensor([L/2,L/2]).type(dtype)

    dt = .1

    simu = models.VolumeExclusion(pos=pos,
                     interaction_radius=R,
                     box_size=L,
                     alpha=2.5,
                     division_rate=.3, 
                     death_rate=.3,                    
                     dt=dt,
                     Nmax = 20000)








.. GENERATED FROM PYTHON SOURCE LINES 117-119

Run the simulation over 200 units of time using an adaptive time-step which ensures that the energy :attr:`E <sisyphe.models.VolumeExclusion.E>` of the system decreases.


.. GENERATED FROM PYTHON SOURCE LINES 119-126

.. code-block:: default


    frames = [0,1,2,3,4,5,10,30,50,75,100,150,200]

    s = time.time()
    scatter_particles(simu,frames)
    e = time.time()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_014.png
          :alt: Volume exclusion  Parameters: N=10000 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=0.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_015.png
          :alt: Volume exclusion  Parameters: N=9985 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=1.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_016.png
          :alt: Volume exclusion  Parameters: N=10007 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=2.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_017.png
          :alt: Volume exclusion  Parameters: N=9950 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=3.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_018.png
          :alt: Volume exclusion  Parameters: N=10014 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=4.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_019.png
          :alt: Volume exclusion  Parameters: N=9972 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=5.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_020.png
          :alt: Volume exclusion  Parameters: N=9874 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=10.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_021.png
          :alt: Volume exclusion  Parameters: N=9540 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=30.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_022.png
          :alt: Volume exclusion  Parameters: N=9245 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=50.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_023.png
          :alt: Volume exclusion  Parameters: N=9550 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=75.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_024.png
          :alt: Volume exclusion  Parameters: N=8759 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=100.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_025.png
          :alt: Volume exclusion  Parameters: N=7871 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=150.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_examples/images/sphx_glr_plot_volume_exclusion_026.png
          :alt: Volume exclusion  Parameters: N=6484 ; alpha=2.5 ; Division rate=0.3 ; Death rate=0.3  Time=200.0
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Progress:0%    Progress:1%    Progress:2%    Progress:3%    Progress:4%    Progress:5%    Progress:6%    Progress:7%    Progress:8%    Progress:9%    Progress:10%    Progress:11%    Progress:12%    Progress:13%    Progress:14%    Progress:15%    Progress:16%    Progress:17%    Progress:18%    Progress:19%    Progress:20%    Progress:21%    Progress:22%    Progress:23%    Progress:24%    Progress:25%    Progress:26%    Progress:27%    Progress:28%    Progress:29%    Progress:30%    Progress:31%    Progress:32%    Progress:33%    Progress:34%    Progress:35%    Progress:36%    Progress:37%    Progress:38%    Progress:39%    Progress:40%    Progress:41%    Progress:42%    Progress:43%    Progress:44%    Progress:45%    Progress:46%    Progress:47%    Progress:48%    Progress:49%    Progress:50%    Progress:51%    Progress:52%    Progress:53%    Progress:54%    Progress:55%    Progress:56%    Progress:57%    Progress:58%    Progress:59%    Progress:60%    Progress:61%    Progress:62%    Progress:63%    Progress:64%    Progress:65%    Progress:66%    Progress:67%    Progress:68%    Progress:69%    Progress:70%    Progress:71%    Progress:72%    Progress:73%    Progress:74%    Progress:75%    Progress:76%    Progress:77%    Progress:78%    Progress:79%    Progress:80%    Progress:81%    Progress:82%    Progress:83%    Progress:84%    Progress:85%    Progress:86%    Progress:87%    Progress:88%    Progress:89%    Progress:90%    Progress:91%    Progress:92%    Progress:93%    Progress:94%    Progress:95%    Progress:96%    Progress:97%    Progress:98%    Progress:99%    Progress:100%



.. GENERATED FROM PYTHON SOURCE LINES 127-128

Print the total simulation time and the average time per iteration. 

.. GENERATED FROM PYTHON SOURCE LINES 128-132

.. code-block:: default


    print('Total time: '+str(e-s)+' seconds')
    print('Average time per iteration: '+str((e-s)/simu.iteration)+' seconds')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Total time: 200.29545760154724 seconds
    Average time per iteration: 0.007975450250917705 seconds





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 8 minutes  53.860 seconds)


.. _sphx_glr_download__auto_examples_plot_volume_exclusion.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_volume_exclusion.py <plot_volume_exclusion.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_volume_exclusion.ipynb <plot_volume_exclusion.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
