
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_tutorials/plot_c_boundaryconditions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__auto_tutorials_plot_c_boundaryconditions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_tutorials_plot_c_boundaryconditions.py:


.. _tuto_boundaryconditions:

Tutorial 03: Boundary conditions
=======================================

The particle systems are defined in a rectangular box whose dimensions are specified by the attribute :attr:`L <sisyphe.Particles.particles.L>`. 

The boundary conditions are specified by the attribute :attr:`bc <sisyphe.Particles.particles.bc>` which can be one of the following. 

* A list of size :math:`d` containing for each dimension either 0 (periodic) or 1 (wall with reflecting boundary conditions).

* The string ``"open"`` : no boundary conditions.

* The string ``"periodic"`` : periodic boundary conditions.

* The string ``"spherical"`` : reflecting boundary conditions on the sphere of diameter :math:`L` enclosed in the square domain :math:`[0,L]^d`. 

.. GENERATED FROM PYTHON SOURCE LINES 22-26

For instance, let us simulate the Vicsek model in an elongated rectangular domain :math:`[0,L_x]\times[0,L_y]` with periodic boundary conditions in the :math:`x`-dimension and reflecting boundary conditions in the :math:`y`-dimension. 

First, some standard imports...


.. GENERATED FROM PYTHON SOURCE LINES 26-35

.. code-block:: default


    import time 
    import torch
    from sisyphe.models import Vicsek
    from sisyphe.display import display_kinetic_particles

    use_cuda = torch.cuda.is_available()
    dtype = torch.cuda.FloatTensor if use_cuda else torch.FloatTensor








.. GENERATED FROM PYTHON SOURCE LINES 36-37

The parameters of the model 

.. GENERATED FROM PYTHON SOURCE LINES 37-49

.. code-block:: default


    N = 100000

    R = .01
    c = .1
    nu = 3.
    sigma = 1.

    dt = .01

    variant = {"name" : "max_kappa", "parameters" : {"kappa_max" : 10.}}








.. GENERATED FROM PYTHON SOURCE LINES 50-52

The spatial domain, the boundary conditions and the initial conditions... 


.. GENERATED FROM PYTHON SOURCE LINES 52-79

.. code-block:: default


    Lx = 3.
    Ly = 1./3.
    L = [Lx, Ly]
    bc = [0,1]

    pos = torch.rand((N,2)).type(dtype)
    pos[:,0] = L[0]*pos[:,0]
    pos[:,1] = L[1]*pos[:,1]
    vel = torch.randn(N,2).type(dtype)
    vel = vel/torch.norm(vel,dim=1).reshape((N,1))

    simu = Vicsek(
        pos = pos.detach().clone(),
        vel = vel.detach().clone(), 
        v = c, 
        sigma = sigma, 
        nu = nu, 
        interaction_radius = R,
        box_size = L,
        boundary_conditions=bc,
        dt = dt,
        variant = variant,
        block_sparse_reduction = True,
        number_of_cells = 100**2)









.. GENERATED FROM PYTHON SOURCE LINES 80-81

Finally run the simulation over 300 units of time.... 

.. GENERATED FROM PYTHON SOURCE LINES 81-90

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 15

    frames = [0., 2., 5., 10., 30., 42., 71., 100, 123, 141, 182, 203, 256, 272, 300]

    s = time.time()
    it, op = display_kinetic_particles(simu, frames, order=True, figsize=(8,3))
    e = time.time()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_001.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=0.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_002.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=2.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_003.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=5.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_004.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=10.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_005.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=30.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_006.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=42.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_007.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=71.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_008.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=100.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_009.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=123.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_010.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=141.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_011.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=182.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_012.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=203.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_013.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=256.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_014.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=272.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_015.png
          :alt: Vicsek(max_kappa)  Parameters: N=100000 ; R=0.01 ; nu=3.0 ; sigma=1.0 ; v=0.1  Time=300.0
          :class: sphx-glr-multi-img

    *

      .. image:: /_auto_tutorials/images/sphx_glr_plot_c_boundaryconditions_016.png
          :alt: plot c boundaryconditions
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Progress:0%    Progress:1%    Progress:2%    Progress:3%    Progress:4%    Progress:5%    Progress:6%    Progress:7%    Progress:8%    Progress:9%    Progress:10%    Progress:11%    Progress:12%    Progress:13%    Progress:14%    Progress:15%    Progress:16%    Progress:17%    Progress:18%    Progress:19%    Progress:20%    Progress:21%    Progress:22%    Progress:23%    Progress:24%    Progress:25%    Progress:26%    Progress:27%    Progress:28%    Progress:29%    Progress:30%    Progress:31%    Progress:32%    Progress:33%    Progress:34%    Progress:35%    Progress:36%    Progress:37%    Progress:38%    Progress:39%    Progress:40%    Progress:41%    Progress:42%    Progress:43%    Progress:44%    Progress:45%    Progress:46%    Progress:47%    Progress:48%    Progress:49%    Progress:50%    Progress:51%    Progress:52%    Progress:53%    Progress:54%    Progress:55%    Progress:56%    Progress:57%    Progress:58%    Progress:59%    Progress:60%    Progress:61%    Progress:62%    Progress:63%    Progress:64%    Progress:65%    Progress:66%    Progress:67%    Progress:68%    Progress:69%    Progress:70%    Progress:71%    Progress:72%    Progress:73%    Progress:74%    Progress:75%    Progress:76%    Progress:77%    Progress:78%    Progress:79%    Progress:80%    Progress:81%    Progress:82%    Progress:83%    Progress:84%    Progress:85%    Progress:86%    Progress:87%    Progress:88%    Progress:89%    Progress:90%    Progress:91%    Progress:92%    Progress:93%    Progress:94%    Progress:95%    Progress:96%    Progress:97%    Progress:98%    Progress:99%



.. GENERATED FROM PYTHON SOURCE LINES 91-92

Print the total simulation time and the average time per iteration. 

.. GENERATED FROM PYTHON SOURCE LINES 92-96

.. code-block:: default


    print('Total time: '+str(e-s)+' seconds')
    print('Average time per iteration: '+str((e-s)/simu.iteration)+' seconds')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Total time: 523.2031211853027 seconds
    Average time per iteration: 0.01744010403951009 seconds




.. GENERATED FROM PYTHON SOURCE LINES 97-98

The simulation produces small clusters moving from left to right or from right to left. Each "step" in the order parameter corresponds to a collision between two clusters moving in opposite directions. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 8 minutes  55.368 seconds)


.. _sphx_glr_download__auto_tutorials_plot_c_boundaryconditions.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_c_boundaryconditions.py <plot_c_boundaryconditions.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_c_boundaryconditions.ipynb <plot_c_boundaryconditions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
